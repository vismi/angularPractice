var cov_32poc30c9=function(){var path='/home/traning/ExpressAngular/model/schemaRegister.js',hash='1ef03adaaa50a66619b59546e4673cb0bb658993',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/traning/ExpressAngular/model/schemaRegister.js',statementMap:{'0':{start:{line:1,column:13},end:{line:1,column:32}},'1':{start:{line:2,column:0},end:{line:2,column:27}},'2':{start:{line:3,column:20},end:{line:3,column:35}},'3':{start:{line:5,column:9},end:{line:11,column:44}},'4':{start:{line:13,column:0},end:{line:19,column:2}},'5':{start:{line:14,column:8},end:{line:18,column:4}},'6':{start:{line:15,column:12},end:{line:15,column:34}},'7':{start:{line:17,column:8},end:{line:17,column:24}},'8':{start:{line:23,column:13},end:{line:23,column:44}},'9':{start:{line:25,column:0},end:{line:25,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:13,column:29},end:{line:13,column:30}},loc:{start:{line:13,column:53},end:{line:19,column:1}},line:13}},branchMap:{'0':{loc:{start:{line:14,column:8},end:{line:18,column:4}},type:'if',locations:[{start:{line:14,column:8},end:{line:18,column:4}},{start:{line:14,column:8},end:{line:18,column:4}}],line:14}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0},f:{'0':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let mongoose=(cov_32poc30c9.s[0]++,require('mongoose'));cov_32poc30c9.s[1]++;mongoose.set('debug',true);let SchemaRegister=(cov_32poc30c9.s[2]++,mongoose.Schema);let Info=(cov_32poc30c9.s[3]++,new SchemaRegister({Username:String,Password:String,Email:String,Phone:Number,DOB:String},{collection:"register",versionKey:false}));cov_32poc30c9.s[4]++;Info.methods.passwordMatch=function(Password,cb){cov_32poc30c9.f[0]++;cov_32poc30c9.s[5]++;if(this.Password==Password){cov_32poc30c9.b[0][0]++;cov_32poc30c9.s[6]++;return cb(null,true);}else{cov_32poc30c9.b[0][1]++;cov_32poc30c9.s[7]++;cb(null,false);}};let register=(cov_32poc30c9.s[8]++,mongoose.model('register',Info));cov_32poc30c9.s[9]++;module.exports=register;